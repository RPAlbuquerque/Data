# -*- coding: utf-8 -*-
"""Untitled40.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1dBda7w3BHI_xoarMrB40aVp9d5bq1MhB
"""

import streamlit as st

# Configuração da página
st.set_page_config(page_title="Mark da Marketri - Quiz de Marketing", page_icon="📊", layout="centered")

# Cores da marca
COR_PRIMARIA = "#8c52ff"  # Roxo
COR_SECUNDARIA = "#5ce1e6"  # Azul celeste

# Estilo CSS com degradê de fundo e visual moderno
st.markdown(f"""
    <style>
        html, body, [class*="css"]  {{
            color: #000000 !important;
            background: linear-gradient(135deg, {COR_PRIMARIA}, {COR_SECUNDARIA}) !important;
            font-family: 'Arial', sans-serif;
        }}
        .stButton > button {{
            background-color: {COR_SECUNDARIA};
            color: white;
            font-weight: bold;
            border-radius: 6px;
            padding: 0.5em 1em;
        }}
        .stRadio > div {{
            padding: 10px 0;
        }}
    </style>
""", unsafe_allow_html=True)

# Logo da Marketri
st.image("https://raw.githubusercontent.com/RPAlbuquerque/Data/main/Logo%20Marketri.png", width=200)

# Avatar do Mark
st.markdown(f"""
    <div style='text-align: center;'>
        <img src='https://raw.githubusercontent.com/RPAlbuquerque/Data/main/Mark.png' width='100'>
        <h1 style='color: white;'>🐵 Mark da Marketri</h1>
        <h3 style='color: white;'>Vamos avaliar o nível de Marketing Estratégico da sua empresa?</h3>
    </div>
""", unsafe_allow_html=True)

st.markdown("<hr style='border: 2px solid white; border-radius: 5px;'>", unsafe_allow_html=True)

# Lista de perguntas e alternativas
perguntas = [
    {
        "pergunta": "Você tem um plano de Marketing claro para os próximos meses?",
        "alternativas": [
            ("Não tenho planejamento, faço postagens e campanhas aleatórias", 1),
            ("Tenho algumas ideias, mas sem plano estruturado", 2),
            ("Sim, tenho um planejamento bem definido com metas claras", 3)
        ]
    },
    {
        "pergunta": "Você acompanha e analisa os resultados e dados de sua campanha?",
        "alternativas": [
            ("Não, só vejo curtidas e seguidores", 1),
            ("Analiso algumas métricas, mas sem muita frequência", 2),
            ("Uso dados para tomar decisões estratégicas e otimizar minhas campanhas", 3)
        ]
    },
    {
        "pergunta": "Seu marketing está alinhado com suas metas de vendas?",
        "alternativas": [
            ("Não, marketing e vendas são coisas separadas pra mim", 1),
            ("Tenho algumas ações voltadas pra vendas, mas sem funil bem definido", 2),
            ("Sim, marketing e vendas andam juntos na minha empresa", 3)
        ]
    },
    {
        "pergunta": "Sua marca tem uma identidade visual forte e reconhecível?",
        "alternativas": [
            ("Não tenho um padrão visual bem definido", 1),
            ("Uso uma identidade visual, mas sem consistência em todos os canais", 2),
            ("Sim, minha identidade visual é bem estruturada e reforça meu posicionamento", 3)
        ]
    },
    {
        "pergunta": "Você trabalha com Marketing Virtual e Offline de forma integrada?",
        "alternativas": [
            ("Uso só marketing digital ou offline, não tem integração", 1),
            ("Tenho algumas ações integradas, mas ainda sem um plano estruturado", 2),
            ("Sim, minhas estratégias online e offline são alinhadas para potencializar os resultados", 3)
        ]
    },
]

# Sessão de estado para controle do quiz
if "indice" not in st.session_state:
    st.session_state.indice = 0
    st.session_state.pontuacao = 0
    st.session_state.respostas = {}

indice = st.session_state.indice

# Mostrar perguntas uma a uma
if indice < len(perguntas):
    pergunta_atual = perguntas[indice]
    st.subheader(f"{indice + 1}. {pergunta_atual['pergunta']}")
    opcoes = [alt[0] for alt in pergunta_atual['alternativas']]
    escolha = st.radio("Escolha uma opção:", opcoes, key=f"pergunta_{indice}")

    if st.button("Próxima pergunta"):
        if escolha:
            pontos = dict(pergunta_atual['alternativas'])[escolha]
            st.session_state.pontuacao += pontos
            st.session_state.respostas[indice] = escolha
            st.session_state.indice += 1
            st.experimental_rerun()
        else:
            st.warning("Por favor, selecione uma opção antes de continuar.")

else:
    # Resultado final
    st.markdown("---")
    total = st.session_state.pontuacao
    st.subheader("Resultado Final 🧠")

    if total <= 10:
        st.error("🔻 **Nível: Iniciante**\n\nSeu marketing ainda não tem uma estratégia clara. É hora de estruturar melhor suas ações para colher bons resultados.")
    elif total <= 20:
        st.warning("🟡 **Nível: Intermediário**\n\nVocê já aplica algumas estratégias, mas ainda pode otimizar muito os resultados.")
    else:
        st.success("🔝 **Nível: Avançado**\n\nParabéns! Seu nível de marketing estratégico está alinhado com o crescimento do seu negócio.")

    # Botão para reiniciar
    if st.button("🔁 Refazer quiz"):
        st.session_state.indice = 0
        st.session_state.pontuacao = 0
        st.session_state.respostas = {}
        st.experimental_rerun()